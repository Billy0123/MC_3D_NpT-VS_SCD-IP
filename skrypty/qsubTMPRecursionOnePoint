#!/bin/bash
#PBS -N HCHRecOPTMP
#PBS -q standard
#PBS -r n
#PBS -l walltime=0:5:0
#PBS -o output/OUT_HC${VAR2}_gaps-${VAR3}_G-${VAR4}_B-${VAR6}_P-${VAR5}_T-${VAR8}_pDD-${VAR9}_iPP-${VAR10}_R-${VAR7}_${PBS_JOBID}.txt
#PBS -e output/ERR_HC${VAR2}_gaps-${VAR3}_G-${VAR4}_B-${VAR6}_P-${VAR5}_T-${VAR8}_pDD-${VAR9}_iPP-${VAR10}_R-${VAR7}_${PBS_JOBID}.txt

#UWAGA #1 !!! Pamietac o wyzerowaniu liczby krokow generatora liczb pseudolosowych (by niepotrzebnie nie czekac na to przy kazdym runie -> OPCJA W CONFIGU)

#$VAR1-job_id jobu, ktory zawieral loadowany punkt, $VAR2-N, $VAR3-gaps, $VAR4-growing, $VAR5-pointNumber(from 0), $VAR6-useSpecificDirectory (UWAGA: NIE 0), $VAR7-ile razy powtorzyc wykonanie jobu?, $filterText-filterText, $VAR8-T, $VAR9-polydisperseDelta, $VAR10-invPotPower


cd $PBS_O_WORKDIR
#pressure do 3 miejsc po przecinku (zeby pasowalo do nazw plikow, lista DOMYSLNIE na G=1)
listLength=$(wc -l startArguments.txt | cut -f1 -d' ');
if [ ${VAR4} = 1 ]; then
   PRESSURE=$(cut -f2 startArguments.txt | head -n $((${VAR5} + 1)) | tail -1);
else
   PRESSURE=$(cut -f2 startArguments.txt | head -n $((${listLength} - ${VAR5})) | tail -1);
fi

#UWAGA #2: PBS tworzy indywidualny folder tmp dla kazdego zadania
cd $TMPDIR
pwd
echo "==============================="

cp $PBS_O_WORKDIR/program .
cp $PBS_O_WORKDIR/config.txt .
cp $PBS_O_WORKDIR/startArguments.txt .
echo "files copied"
mkdir 3D_N-${VAR2}_gaps-${VAR3}_G-${VAR4}_badanie-${VAR6}_T-${VAR8}_pDD-${VAR9}_iPP-${VAR10}
cp $PBS_O_WORKDIR/3D_N-${VAR2}_gaps-${VAR3}_G-${VAR4}_badanie-${VAR6}_T-${VAR8}_pDD-${VAR9}_iPP-${VAR10}/j-${VAR1}_Configurations_arg-${PRESSURE}.txt 3D_N-${VAR2}_gaps-${VAR3}_G-${VAR4}_badanie-${VAR6}_T-${VAR8}_pDD-${VAR9}_iPP-${VAR10} && {

   #UWAGA #3: Mozna do programu zadac jobID rowny np. 'repeats left' (lub 'none' gdy to zwykla rekurencja [a nie onePoint]). Wtedy w przypadku ewentualnej reanimacji powinno byc latwiej (bo: komenda 'sacct' [i podobne], czy nawet zapis w ERR [jezeli akurat powstanie - na co liczyc nie mozna] da co prawda informacje o jobID nieudanego jobu, jednak NIE DA informacji o jobID jobu 'poprzedniego' [z ktorego on korzystal i ktorego znajomosc potrzebna jest do reanimacji]) - nie bedzie trzeba go szukac po folderach indywidualnie dla kazdego reanimowanego jobu.
   time ./program 4 $PBS_JOBID $VAR1 $VAR2 $VAR3 $VAR4 $VAR5 1 $VAR6 0 ${VAR8} ${VAR9} ${VAR10}

   cp -fr 3D_N-${VAR2}_gaps-${VAR3}_G-${VAR4}_badanie-${VAR6}_T-${VAR8}_pDD-${VAR9}_iPP-${VAR10} $PBS_O_WORKDIR
   #UWAGA #4: PBS kasuje po sobie tempa automatycznie

   if [ $(($VAR7 - 1)) -gt 0 ]; then 
   ssh ce.reef.man.poznan.pl "cd $PBS_O_WORKDIR; qsub -N ${filterText}G${VAR4}B${VAR6}P${VAR5}R$(($VAR7 - 1)) -v VAR1=$PBS_JOBID,VAR2=$VAR2,VAR3=$VAR3,VAR4=$VAR4,VAR5=$VAR5,VAR6=$VAR6,VAR7=$(($VAR7 - 1)),filterText=${filterText},VAR8=${VAR8},VAR9=${VAR9},VAR10=${VAR10} qsubTMPRecursionOnePoint";
   #ui.inula.man.poznan.pl
   fi
} || {
   echo "Missing configuration file (previous job failed) or actual job failed at any step. Stopping recursion.";
}

exit 0
