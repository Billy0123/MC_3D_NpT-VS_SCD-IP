#!/bin/bash
#PBS -N HCHRecSNTMP
#PBS -q standard
#PBS -r n
#PBS -l walltime=0:5:0
#PBS -o output/OUT_HC${VAR1}_gaps-${VAR2}_G-${VAR3}_B-${VAR5}_P-${VAR7}_T-${VAR10}_pDD-${VAR11}_iPP-${VAR12}_${PBS_JOBID}.txt
#PBS -e output/ERR_HC${VAR1}_gaps-${VAR2}_G-${VAR3}_B-${VAR5}_P-${VAR7}_T-${VAR10}_pDD-${VAR11}_iPP-${VAR12}_${PBS_JOBID}.txt

#$VAR1-N, $VAR2-gaps, $VAR3-growing, $VAR4-iterationsNumber, $VAR5-useSpecificDirectory (UWAGA: NIE 0), $VAR6-MAX(+1)PointNumber(from 0), $VAR7-pointNumber(from 0), $filterText-filterText, $VAR8-generatorStartPoint, $VAR9-jobID, $VAR10-T, $VAR11-polydisperseDelta, $VAR12-invPotPower


#UWAGA #1: PBS tworzy indywidualny folder tmp dla kazdego zadania
cd $TMPDIR
pwd
echo "==============================="

cp $PBS_O_WORKDIR/program .
cp $PBS_O_WORKDIR/config.txt .
cp $PBS_O_WORKDIR/startArguments.txt .
echo "files copied"

#UWAGA #2: Mozna do programu zadac jobID rowny np. 'repeats left' (lub 'none' gdy to zwykla rekurencja [a nie onePoint]). Wtedy w przypadku ewentualnej reanimacji powinno byc latwiej (bo: komenda 'sacct' [i podobne], czy nawet zapis w ERR [jezeli akurat powstanie - na co liczyc nie mozna] da co prawda informacje o jobID nieudanego jobu, jednak NIE DA informacji o jobID jobu 'poprzedniego' [z ktorego on korzystal i ktorego znajomosc potrzebna jest do reanimacji]) - nie bedzie trzeba go szukac po folderach indywidualnie dla kazdego reanimowanego jobu.
time ./program 2 $VAR9 $VAR1 $VAR2 $VAR3 $VAR4 $VAR5 0 $VAR7 $VAR8 ${VAR10} ${VAR11} ${VAR12}

cp -fr 3D_N-${VAR1}_gaps-${VAR2}_G-${VAR3}_badanie-${VAR5}_T-${VAR10}_pDD-${VAR11}_iPP-${VAR12} $PBS_O_WORKDIR
#UWAGA #3: PBS kasuje po sobie tempa automatycznie

ssh ce.reef.man.poznan.pl "cd $PBS_O_WORKDIR; qsub -N ${filterText}G${VAR3}B${VAR5}P$(($VAR7 + $VAR4)) -o output/OUT_HC${VAR1}_gaps-${VAR2}_G-${VAR3}_B-${VAR5}_P-$(($VAR7 + $VAR4))_T-${VAR10}_pDD-${VAR11}_iPP-${VAR12}_prevJobID-${PBS_JOBID}.txt -e output/ERR_HC${VAR1}_gaps-${VAR2}_G-${VAR3}_B-${VAR5}_P-$(($VAR7 + $VAR4))_T-${VAR10}_pDD-${VAR11}_iPP-${VAR12}_prevJobID-${PBS_JOBID}.txt -v VAR1=$VAR9,VAR2=$VAR1,VAR3=$VAR2,VAR4=$VAR3,VAR5=$(($VAR7 + $VAR4 - 1)),VAR6=$VAR4,VAR7=$VAR5,VAR8=$VAR6,filterText=${filterText},VAR9=${VAR10},VAR10=${VAR11},VAR11=${VAR12} qsubTMPRecursion";
#ui.inula.man.poznan.pl
exit 0
